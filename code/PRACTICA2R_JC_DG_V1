```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


```{r, include=FALSE}
library(dplyr)

library(data.table)

library(ggplot2)

library(grid)
library(gridExtra)

library(DT)

library(plotly)

library(mice)

library(stringi)
library(stringr)

library(C50)
library(caret)
library(tidyverse)
```

Empezaremos cargando los ficheros a analizar:

```{r}
train <- read.csv("C:/Users/jordi/Desktop/PRA2TIPOLOGIA/train.xls")
test <- read.csv("C:/Users/jordi/Desktop/PRA2TIPOLOGIA/test.xls")
gender <- read.csv("C:/Users/jordi/Desktop/PRA2TIPOLOGIA/gender-submission.xls")
```

Una vez cargados, vamos a visualizarlos:

```{r}
train
test
gender
```

Podemos ver que los PassengerId del dataset "test" y del dataset "gender" coinciden, y en test no nos aparece la variable Survived pero en gender sí.Tendremos que combinar ambos para que train y test coincidan en el numero de variables; 


```{r}
test1 <- merge(test, gender, by="PassengerId")
test1 = test1[,c(1,12,2:11)]
```

Cargaremos los ficheros en dataframes: 

```{r}
train <- as.data.frame(train)
test <- as.data.frame(test1)
```

Miraremos que coincidan las columnas de ambos dataframes: 

```{r}
colnames(train)
str(train)
colnames(test)
str(test)
```

Ahora ya podremos empezar a trabajar con ellos;

Entonces vamos a aplicar la función Summary para los dataframes para tener una idea general. 

```{r}
summary(train)
summary(test)
```

```{r}
head(train)
head(test)
```


Factorizamos variables numericas Pclass y survived para test y para train; 


```{r}
train$Pclass <- as.factor(train$Pclass)
train$Survived <- as.factor(train$Survived)
test$Pclass <- as.factor(test$Pclass)
test$Survived <- as.factor(test$Survived)

sapply(train, function(x) class(x))
sapply(test, function(x) class(x))
```

Una vez tenemos las clases de las variables procedemos a estudiar los valores nulos antes de hacer el análisi de estas; 

```{r}
sapply(train, function(x) sum(is.na(x)))
sapply(test, function(x) sum(is.na(x)))
```

Podemos ver que sólo presentamos valores nulos en la variable Age y en Fare en caso de test. Para tratarlos podríamos eliminar los registros nulos, pero esto haria que perdieramos muchos datos, por lo que procederemos a sustituir estos valores nulos por la media; 



```{r}
summary(train$Age)
summary(test$Age)

```
```{r}
round(mean(train$Age, na.rm = TRUE),2)
round(mean(test$Age, na.rm = TRUE),2)
```

Podemos ver que las medias de edades son 29.68 Para train y 30.27 para test, entonces las sustituiremos por estas:


```{r}
train <- train %>% mutate(Age = replace(Age, which(is.na(Age)), round(mean(train$Age, na.rm = TRUE),2)))
test <- test %>% mutate(Age = replace(Age, which(is.na(Age)),round(mean(test$Age, na.rm = TRUE),2)))

```

```{r}
head(train)
head(test)
```


```{r}
summary(test$Fare)
test <- test %>% mutate(Fare = replace(Fare, which(is.na(Fare)), round(mean(test$Fare, na.rm = TRUE),2)))
```

Y ahora haremos lo mismo con la variable Fare, para el único nulo que presenta: 

```{r}
summary(test$Fare)
round(mean(test$Fare, na.rm = TRUE),2)
```

Miraremos si tiene sentido primero el cambio de Fare, ya que tenemos que ver a qué clase corresponde este pasajero: 

```{r}

test[test$Fare == 35.63,]$PassengerId

test[test$PassengerId == 1044,]

```

Podemos ver que el pasajero cuya cuota se ha substituido por la media,podría no corresponder a la 3a clase, entonces miramos cómo se distribuyen las cuotas:

```{r}
summary(test[test$Pclass==3,]$Fare)
summary(test[test$Pclass==2,]$Fare)
summary(test[test$Pclass==1,]$Fare)
```

Entonces el pasajero por el que se le ha camiado el valor de Fare por la media, podría pertenecer perfectamente a la 3a clase, dado que esta por debajo del máximo valor de Fare en la tercera clase, como podemos ver en el summary anterior. 

```{r}
summary(test$Fare)
```

Para acabar con el análisi de Fare, podemos ver lo siguiente: 


```{r}
train[train$Fare == 0,]$Sex
```

Sólo los hombres obtuvieron entradas gratuitas para el titanic, por lo que también podríamos substituir por 0 el valor nulo anterior.
Pero se ha decidido por lo anterior. 


```{r}
sapply(train, function(x) sum(is.na(x)))
sapply(test, function(x) sum(is.na(x)))
```

Entonces podemos ver que el cambio se ha hecho correctamente. 


Eliminaremos la variable PassengerId ya que no nos aporta nada: 


```{r}
train <- select(train, -PassengerId )
test <- select(test, -PassengerId )
```

Tambien borraremos el ticket, la cabina, sibsp y parch, ya que sólo aportan información extra que no necesitamos, lo que nos interesa es relacionar la supervivencia con las variables que consideramos que tienen más peso en el estudio, como son Age, Pclass y Sex.  

```{r}
train <- select(train, -Ticket )
test <- select(test, -Ticket )
```

```{r}
train <- select(train, -Cabin )
test <- select(test, -Cabin )
```

```{r}
train <- select(train, -SibSp )
test <- select(test, -SibSp )
```

```{r}
train <- select(train, -Parch )
test <- select(test, -Parch )
```

Procederemos a analizar las variables para ambos datasets: 

```{r}
boxplot( train$Age, main="Age" )
boxplot( test$Age, main="Age" )

```

Podemos ver los valores extremos:

```{r}
valuesX <- boxplot.stats(train$Age)$out
#miramos valores extremos en la variable Age:
cat("Valores extremos en Age de train:", toString(valuesX), "\n" )
valuesY <- boxplot.stats(test$Age)$out
#miramos valores extremos en la variable Age:
cat("Valores extremos en Age de test:", toString(valuesY), "\n" )

```

```{r}

idxAgeX <- which( train$Age %in% valuesX)
idxAgeY <- which( test$Age %in% valuesY)

trainA <- train[-idxAgeX, ]
testA <- test[-idxAgeY,]
#Boxplot final:
boxplot( trainA$Age, main="Age después de eliminar outliers (train)" )
boxplot( testA$Age, main="Age después de eliminar outliers (test)" )


```

Podemos ver que las medias en ambos casos son muy similares, pero para analizar las variables, no eliminaremos estos valores extremos puesto que en la edad consideramos importantes mantener a estos registros con edades superiores a la media e inferiores para poder determinar la tasa de supervivéncia según edades y si eliminamos ésta se podrá ver afectada. 

```{r}
boxplot( train$Fare, main="Fare (train)" )
boxplot( test1$Fare, main="Fare (test)" )
```
valores extremos: 

```{r}
values1X <- boxplot.stats(train$Fare)$out
#miramos valores extremos en la variable Age:
cat("Valores extremos en Fare (train):", toString(values1X), "\n" )
values1Y <- boxplot.stats(test1$Fare)$out
#miramos valores extremos en la variable Age:
cat("Valores extremos en Fare (test):", toString(values1Y), "\n" )
```

```{r}

idxFareX <- which( train$Fare %in% values1X)
idxFareY <- which( test1$Fare %in% values1Y)

FareX <- train[ -idxFareX, ]
FareY <- test1[ -idxFareY, ]

#Boxplot final:
boxplot( FareX$Fare, main="Fare después de eliminar outliers (train)" )
boxplot( FareY$Fare, main="Fare después de eliminar outliers (test)" )
```

Podemos ver que no tiene sentido eliminar los valores extremos en Fare, igual que en Age, dado que por lógica podemos considerar que las tarifas de los pasajeros pueden variar dado que dependiendo de la clase a la que pertenezca puede ser más alto o más bajo...No nos interesa eliminarestos valores por que perderemos datos y cualquier pérdida de datos consideramos que afectará a nuestro estudio. 


```{r}
barplot(table(train$Survived), main = "Survived train", ylab = "Frecuency", xlab = "Survived")
barplot(table(test$Survived), main = "Survived test", ylab = "Frecuency", xlab = "Survived")
```

El numero de registros para ambos dataframes es diferente, dado que tenemos más registros en train que en test, pero la clase mayoritaria en ambos, es la que no sobrevivió a la catastrofe del Titanic. Miraremos por clase también, qué clase fue la mayoritaria de pasajeros: 


```{r}
barplot(table(train$Pclass), main = "Pclass train", ylab = "Frecuency", xlab = "Pclass")
barplot(table(test$Pclass), main = "Pclass test", ylab = "Frecuency", xlab = "Pclass")
```

La clase mayoritaria de passajeros en el Titanic, fue la 3ra, como es lógico, la mayoria de clientes que entraron en el titanic lo hicieron mediante la clase más económica. 


Nos interesa ver la relación de la clase survived con el resto de variables, como la de la clase a la que pertenecian, la edad y el sexo: 

Para train; 

```{r}
grid.newpage()
plotbyClass_train<-ggplot(train,aes(Pclass,fill=Survived))+geom_bar() +labs(x="Class", y="Passengers")+ guides(fill=guide_legend(title=""))+ scale_fill_manual(values=c("black","#008000"))+ggtitle("Survived by PClass(train)")

plotbyAge_train<-ggplot(train,aes(Age,fill=Survived))+geom_bar() +labs(x="Age", y="Passengers")+ guides(fill=guide_legend(title=""))+ scale_fill_manual(values=c("black","#008000"))+ggtitle("Survived by Age (train)")

plotbySex_train<-ggplot(train,aes(Sex,fill=Survived))+geom_bar() +labs(x="Sex", y="Passengers")+ guides(fill=guide_legend(title=""))+ scale_fill_manual(values=c("black","#008000"))+ggtitle("Survived by Sex (train)")

plotbyEmbarked_train<-ggplot(train,aes(Embarked,fill=Survived))+geom_bar() +labs(x="Embarked", y="Passengers")+ guides(fill=guide_legend(title=""))+ scale_fill_manual(values=c("black","#008000"))+ggtitle("Survived by Embarked (train)")

grid.arrange(plotbyClass_train,plotbyAge_train,plotbySex_train, plotbyEmbarked_train,ncol=2)
```

Podemos ver que en Pclass, la clase con más víctimas es la mayoritaria, es decir, la clase más economica, pero también podemos ver que la proporcion de victimas y supervivientes es la que más se ve afectada... ya que más del 50% de los pasajeros de la 3a clase murieron. 
Por lo que hace a la variable Sex, la proporción con más supervivientes es la de mujeres mientras que la proporcion de supervivientes masculinos es todo lo contrario. 
Por puerto de embarcación, podemos ver que pasa lo mismo que con la variable PClass, que tenemos un puerto, concretamente el de Southampton, con la mayor parte de pasajeros, entonces la proporción se acerca a lo que se ha visto anteriormente con la 3ra Clase. 
Finalmente tenemos a la variable Age, que tendremos que agrupar en 3 segmentos, separandola por rangos de Edad, ya que como se ha hecho hasta ahora, para visualizarlo es muy complicado de poder determinar la tasa de supervivéncia y entonces lo cambiaremos por child, adult y senior (menores o iguales a 18 años serán los jovenes, seguido de los adultos hasta los 60 años) 

``` {r}

train$Age[train$Age <=18] = "Child"
train$Age[(train$Age > 18) & (train$Age <=60) & (train$Age != "Child")] = "Adult"
train$Age[(train$Age != "Child") & (train$Age != "Adult")] = "Senior"
train$Age = as.factor(train$Age)
          
```


```{r}
grid.newpage()

NewplotbyAge_train<-ggplot(train,aes(Age,fill=Survived))+geom_bar() +labs(x="Age", y="Passengers")+ guides(fill=guide_legend(title=""))+ scale_fill_manual(values=c("black","#008000"))+ggtitle("Survived by Age (train)")


grid.arrange(NewplotbyAge_train,ncol=2)
```


Entonces podemos ver perfectamente que la mayoria de pasajeros eran Adultos y la mayoria de ellos fueron victimas, esto podemos atribuirlo a que la mayoria de pasajeros no sobrevivieron, mientras que en pasajeros entre 0-18 años, la proporción se ve más repartida que en Adult. Por último tenemos a Senior, que son minoria, podemos ver que la proporcion de victimas és mayor a la de supervivientes. 

Una vez mostradas las gráficas, podemos ver las proporciones: 

```{r}
table_SexSurvived <- table(train$Sex, train$Survived)
prop.table(table_SexSurvived, margin = 1)
```

Podemos ver que un 74% de la población de mujeres sobrevivió a la catastrofe mientras que sólo el 18% de la población masculina lo hizo... 

Sguiremos con el estudio de la clase: 

```{r}
table_PclassSurvived <- table(train$Pclass,train$Survived)
prop.table(table_PclassSurvived, margin = 1)
```

Como se ha comentado anteriormente, podemos ver que el  76% de los pasajeros pertenecientes a la 3a clase, fueron victimas. Podemos ver que mientras subimos de clase (de 3a a 1a) vamos encontrando una mayor tasa de supervivéncia que podríamos decir que esta se debe a que cada vez que subimos de clase, nos encontramos con menos pasajeros. 

```{r}
table_AgeSurvived <- table(train$Age,train$Survived)
prop.table(table_AgeSurvived, margin = 1) 
```

Podemos ver que los niños sobrevivieron en un 50% más o menos, debido a que se ha elegido la edad de 18 años como niño también  y podríamos ver, en los siguientes cálculos que si lo cambiamos a niño hasta la edad de 15, que podría cambiar:

```{r}
trainXAge <- read.csv("C:/Users/jordi/Desktop/PRA2TIPOLOGIA/train.xls")
trainXAge$Age[trainXAge$Age <=15] = "Child"
trainXAge$Age[(trainXAge$Age > 15) & (trainXAge$Age <=60) & (trainXAge$Age != "Child")] = "Adult"
trainXAge$Age[(trainXAge$Age != "Child") & (trainXAge$Age != "Adult")] = "Senior"
trainXAge$Age = as.factor(trainXAge$Age)

table_XAgeSurvived <- table(trainXAge$Age,trainXAge$Survived)
prop.table(table_XAgeSurvived, margin = 1) 
```

Podemos ver que éste cambio representa un incremento irrelevante, dado que se pensaba que incrementariamos mucho más la tasa de supervivéncia de la clase niños, por lo que sólo nos fijaremos en lo representado anteriormente. 

Y lo combinaremos con la clase, la edad (child -> <=18) y la supervivéncia. 

```{r}
tablebyAClass <- table(train$Age,train$Survived,train$Pclass)
tablebyAClass
prop.table(tablebyAClass, margin = 1) 
```

Como se ha visto anteriormente, la 3a clase es la que más víctimas tiene, por lo que si nos fijamos en los niños, podemos ver que cada vez que aumentamos la clase, tenemos que la supervivencia de los incrementa de manera significativa. 

```{r}
tablebyBClass <- table(train$Age,train$Survived,train$Sex)
tablebyBClass
prop.table(tablebyBClass, margin = 1) 
```

Podemos ver que la tasa de mujeres supervivientes en senior es del 100%, mientras que en hombres es mucho menor, ya que sólo sobrevivieron 2 hombres mayores a 60 años... Igual que la proporcion de mujeres supervivientes respecto a los hombres supervivientes es mayor en Adult y en Child. 

Para test: 

```{r}
grid.newpage()
plotbyClass_test<-ggplot(test,aes(Pclass,fill=Survived))+geom_bar() +labs(x="Class", y="Passengers")+ guides(fill=guide_legend(title=""))+ scale_fill_manual(values=c("black","#008000"))+ggtitle("Survived by PClass(train)")

plotbyAge_test<-ggplot(test,aes(Age,fill=Survived))+geom_bar() +labs(x="Age", y="Passengers")+ guides(fill=guide_legend(title=""))+ scale_fill_manual(values=c("black","#008000"))+ggtitle("Survived by Age (train)")

plotbySex_test<-ggplot(test,aes(Sex,fill=Survived))+geom_bar() +labs(x="Sex", y="Passengers")+ guides(fill=guide_legend(title=""))+ scale_fill_manual(values=c("black","#008000"))+ggtitle("Survived by Sex (train)")

plotbyEmbarked_test<-ggplot(test,aes(Embarked,fill=Survived))+geom_bar() +labs(x="Embarked", y="Passengers")+ guides(fill=guide_legend(title=""))+ scale_fill_manual(values=c("black","#008000"))+ggtitle("Survived by Embarked (train)")

grid.arrange(plotbyClass_test,plotbyAge_test,plotbySex_test, plotbyEmbarked_test,ncol=2)
```

``` {r}

test$Age[test$Age <=18] = "Child"
test$Age[(test$Age > 18) & (test$Age <=60) & (test$Age != "Child")] = "Adult"
test$Age[(test$Age != "Child") & (test$Age != "Adult")] = "Senior"
test$Age = as.factor(test$Age)
          
```

Volvemos a hacer lo mismo ara ver los gráficos, con las Clases de edades "actulizadas": 

```{r}
grid.newpage()
plotbyClass_test<-ggplot(test,aes(Pclass,fill=Survived))+geom_bar() +labs(x="Class", y="Passengers")+ guides(fill=guide_legend(title=""))+ scale_fill_manual(values=c("black","#008000"))+ggtitle("Survived by PClass(test)")

plotbyAge_test<-ggplot(test,aes(Age,fill=Survived))+geom_bar() +labs(x="Age", y="Passengers")+ guides(fill=guide_legend(title=""))+ scale_fill_manual(values=c("black","#008000"))+ggtitle("Survived by Age (test)")

plotbySex_test<-ggplot(test,aes(Sex,fill=Survived))+geom_bar() +labs(x="Sex", y="Passengers")+ guides(fill=guide_legend(title=""))+ scale_fill_manual(values=c("black","#008000"))+ggtitle("Survived by Sex (test)")

plotbyEmbarked_test<-ggplot(test,aes(Embarked,fill=Survived))+geom_bar() +labs(x="Embarked", y="Passengers")+ guides(fill=guide_legend(title=""))+ scale_fill_manual(values=c("black","#008000"))+ggtitle("Survived by Embarked (test)")

grid.arrange(plotbyClass_test,plotbyAge_test,plotbySex_test, plotbyEmbarked_test,ncol=2)
```

Podemos ver que es similar al dataset de train, pero con la diferencia de que los hombres fueron víctima en su totalidad... Veremos ahora las probabilidades: 

```{r}
table_SexSurvivedTest <- table(test$Sex, test$Survived)
prop.table(table_SexSurvivedTest, margin = 1)
```

Podemos ver que la totalidad de mujeres sobrevivió en el dataset de test y la totalidad de hombres murio. 

```{r}
table_PclassSurvivedTest <- table(test$Pclass,test$Survived)
prop.table(table_PclassSurvivedTest, margin = 1)
```

En test, podemos ver que siempre tenemos mayoria de victimas y una proporción muy similar entre la 3a y 2a clase. Pero siempre tenemos mayoria de victimas, exceptuando la primera clase, que la tasa de víctimas es muy poco superior a la de supervivientes. 

```{r}
table_AgeSurvivedTest <- table(test$Age,test$Survived)
prop.table(table_AgeSurvivedTest, margin = 1) 
```

Podemos ver que en test las proporciones son similares a lo que podemos ver en train

```{r}
tablebyAClassTest <- table(test$Age,test$Survived,test$Pclass)

prop.table(tablebyAClassTest, margin = 1) 
```

```{r}
tableTestbyBClass <- table(test$Age,test$Survived,test$Sex)
tableTestbyBClass
prop.table(tableTestbyBClass, margin = 1) 
```

Podemos ver que en test todas las mujeres sobrevivieron, mientras que todos los hombres murieron, sin tener que depender de la edad, la variable que tiene más peso en test para decidir la supervivéncia de un pasajero, es la del género. 

Ahora empezaremos a hacer algunas predicciones:


```{r}
predictTrainSex <- glm(Survived ~ Sex,family = "binomial" , data = train)
summary(predictTrainSex)
predictTestSex <- glm(Survived ~ Sex,family = "binomial" , data = test)
summary(predictTestSex)
```

podemos ver que la probabilidad de supervivencia disminuye  cuando el sexo del pasajero es hombre, en ambos dataframes. 

```{r}
predictTrainAge <- glm(Survived ~ Age,family = "binomial" , data = train)
summary(predictTrainAge)
predictTestAge <- glm(Survived ~ Age,family = "binomial" , data = test)
summary(predictTestAge)
```

Podemos ver que cuando la edad del pasajero es niño la probabilidad de supervivencia aumenta, mientras que disminuye en caso de senior, para el caso de train. En caso de test, podemos ver que la probabilidad de supervivencia disminuye cuando el pasajero es niño o senior. 

```{r}
predictTrainPclass <- glm(Survived ~ Pclass,family = "binomial" , data = train)
summary(predictTrainPclass)
predictTestPclass <- glm(Survived ~ Pclass,family = "binomial" , data = test)
summary(predictTestPclass)
```
Podemos ver que para ambos datafames, la probabilidad de sobrevivir siendo pasajero de 2a y 3a clase disminuye notablemente. 


```{r}
predictTrainTotal <- glm(Survived ~ Sex + Pclass + Age,family = "binomial", data = train)
summary(predictTrainTotal)
predictTestTotal <- glm(Survived ~ Sex + Pclass + Age,family = "binomial", data = test)
summary(predictTestTotal)
```
Podemos ver que para train, el hecho de ser niño aumenta la probabilidad de sobrevivir, mientras que pertenecer a la 2a o 3a clase disminuye las porbabilidades de supervivencia, al igual que ser hombre, que tambien disminuye notablemente. 
En train podemos ver que sólo aumentaremos las probabilidades de supervivencia si somos ancianos, pero las dismminuiremos si pertenecemos a la 2a o 3a clase, al igual que siendo hombres o niños. 

Entonces miraremos el modelo C50; 

```{r}
nrow(train)
nrow(test)
```

Creamos otro dataset para train para ejecutar el modelo C50;

```{r}
mTrain <- select(train, -Embarked, -Fare, -Name)
mTrain$Survived <- ifelse(mTrain$Survived == 0, "Dies", "Lives")
mTrain$Survived <- as.factor(mTrain$Survived)
mTrain
```

Hacemos lo mismo para test:

```{r}
mTest <- select(test, -Embarked, -Fare, -Name)
mTest$Survived <- ifelse(mTest$Survived == 0, "Dies", "Lives")
mTest$Survived <- as.factor(mTest$Survived)
mTest
```

```{r}
yTR <- mTrain[,1] 
XTR <- mTrain[,2:4]
yTS <- mTrain[,1] 
XTS <- mTrain[,2:4]
```


```{r}
trainX <- XTR[1:891,]
trainy <- yTR[1:891]
testX <- XTS[1:418,]
testy <- yTS[1:418]
```


```{r}
modelTR <- C50::C5.0(trainX, trainy, rules=TRUE )
summary(modelTR)
```



Podemos ver ahora que si la es hombre tiene un 81% de probabilidades de morir mientras que una mujer tiene un porcentaje de supervivencia de 0,74%, no nos aparece ninguna Rule que nos lo relacione con Age o Pclass, la clase que tiene más peso para decidir el destino de la vida de un pasajero en el titanic es la variable Sex; 

```{r}
model1 <- C50::C5.0(trainX, trainy)
plot(model1)

```

Finalmente comprovamos su cualidad prediciendo la clase por los datos de prueba con los datos de test. 

```{r}
predicted_model <- predict(model1, testX, type="class")
print(sprintf("La precisión del árbol es: %.4f %%",100*sum(predicted_model == testy) / length(predicted_model)))
```


Podemos ver que la precisión del árbol es del 80%. 
